# Honkit general guidelines for publishing to GitHub pages

## Purpose

Describe the procedure for rendering documentation maintained on GitHub to a 
GitBook like output for hosting on GitHub Pages, or other static web hosting 
site. The hosted markdown files are compiled into a book using the [HonKit 
plugin](https://www.npmjs.com/package/honkit) for Node.JS. Several add-on 
packages exist that enable the creation of a PDF document from the same source 
used to render html documentation. Discussion of these packages is beyond the 
scope of this SOP.

## Scope
Use of Node.js and Honkit to create a static HTML website from a collection of Markdown files hosted on a GitHub repository.


## Definitions/Acronyms


## Software Requirements

The following components must be properly installed and configured. Details on 
the installation and use of the various components is beyond the scope of this 
SOP.

  - [Node.js](https://nodejs.org/).
  - [HonKit plugin](https://www.npmjs.com/package/honkit) for Node.js.
  - [GitHub](https://github.com/) or [Git](https://git-scm.com/) version control system.
  - OPTIONAL: the open source [calibre](https://github.com/kovidgoyal/calibre)
    e-book manager, which provides a PDF conversion utility ([Windows binaries](https://calibre-ebook.com/download_portable)).

## Personnel Qualifications

Staff who edit and render content for web distribution should have: 

  - Access to an appropriate version control system (e.g., [GitHub](https://github.com/)).
  - Knowledge of [GitHub Markdown](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github) formatting syntax.
  - Knowledge of procedures required to [fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo) and [contribute](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) to GitHub repositories.

## Procedures

### Perform and preview edits locally

  - Fork and/or clone desired repository.
  - Edit source files as required.
  - Preview local changes using the `npx honkit serve` command.
    	- Pages will be served at: http://localhost:4000/
      - The rendered local pages should provide a live preview of edits.
  
Note: Serve to ./docs directory

  - npx honkit serve --format website --live true --watch true ./ ./docs/


### Generate static HTML site

  - Use `npx honkit build --format website [source path] [output path]`, where:
    - [**source path**] is the documentation source directory (typically "./"),
    - [**output path**] is the destination directory for the rendered HTML (default = "./docs")
  - Upload contents of `output path` to html server.

## Generate PDF

  - 

## References

  - [HonKit Documentation](https://honkit.netlify.app/)
  - 

## Revision History

### 2023-08-22

  **Author**: Hilmar_Maier@fws.gov
  
  **Change Summary**:
  
   Initial version

---
# Appendices


## Plugin for PDF conversion

  
### Add PDF options to "book.json" file

  {
    "pdf": {
      "pageNumbers": true,
      "paperSize": "legal"
    }
  }

  Page size successfully changes.

## Updated "book.json" to use font awesome icons

    "anchorjs": {
      "selector": "h1, h2, h3, h4, h5",
      "x-icon": "ðŸ‘„",
      "x2-icon": "ðŸ”—",
  --> "icon": "\uF0C1",
      "placement": "right",
      "visible": "hover",
      "x-class": "sa-anchor",
  --> "class": "fa",
      "truncate": 64,
      "ariaLabel": "Anchor"
     }


## Things to fix

### GitBook images do not render
  Images names includes parenthesis and spaces and must be url encoded e.g.
		"../.gitbook/assets/image (9).png" -> "../.gitbook/assets/image%20%289%29.png"
    
### Notes about gh-pages rendering:

  - heading anchors (#) do not display
  - Image at https://tpatterson.gitbook.io/sametadatacreationguide/lcc-science-catalog#architecture-editing-in-progress does not rendere on gh-pages (https://hmaier-fws.github.io/SA_Metadata_Manual/lcc-science-catalog.html#architecture-editing-in-progress)
  - 

Moved /.gitbook/assests/ to /assets/
  - Rebuild docs
  - deploy to gh-pages

### Replace all ".gitbook/assets/" with "assets/"

---
## Git notes
		
	Update .gitignore to include *.txt.bak
	
		Untrack file that is already checked in before adding a rule to ignore it. (as per https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files)
		
			git rm --cached FILENAME
			
		Seems that the entire path needs to be entered (e.g. "*.bak" and *.txt.bak" don't work)
    
    
